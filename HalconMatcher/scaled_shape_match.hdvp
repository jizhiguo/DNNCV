<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="17.12">
<procedure name="scaled_shape_match">
<interface>
<io>
<par name="TemplateImage" base_type="iconic" dimension="0"/>
<par name="Image" base_type="iconic" dimension="0"/>
</io>
<oc>
<par name="Row" base_type="ctrl" dimension="0"/>
<par name="Column" base_type="ctrl" dimension="0"/>
<par name="Angle" base_type="ctrl" dimension="0"/>
<par name="Scale" base_type="ctrl" dimension="0"/>
<par name="Score" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="2">* Matching 01: ************************************************</c>
<c as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="3">* Matching 01: BEGIN of generated code for model initialization</c>
<c as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="4">* Matching 01: ************************************************</c>
<l as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="5">set_system ('border_shape_models', 'false')</l>
<c as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="6">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,1]" as_ord="1">* Matching 01: Obtain the model image</c>
<l>* read_image (Image, 'F:/temp/wall2.jpg')</l>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,2]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,2]" as_ord="2">* Matching 01: Build the ROI from basic regions</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,1,2]" as_ord="3">gen_rectangle1 (ModelRegion, 455.448, 377.833, 612.441, 687.833)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,3]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,3]" as_ord="2">* Matching 01: Reduce the model template</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,1,3]" as_ord="3">reduce_domain (Image, ModelRegion, TemplateImage)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,4]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,4]" as_ord="2">* Matching 01: Create the shape model</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,1,4]" as_ord="3">create_scaled_shape_model (TemplateImage, 5, rad(0), rad(360), rad(0.6638), 0.95, 1.05, 0.0116, ['point_reduction_high','no_pregeneration'], 'use_polarity', [25,35,12], 4, ModelID)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[1,2]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,2]" as_ord="2">* Matching 01: Get the model contour for transforming it later into the image</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,2]" as_ord="3">get_shape_model_contours (ModelContours, ModelID, 1)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="2">* Matching 01: Get the reference position</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="3">area_center (ModelRegion, ModelRegionArea, RefRow, RefColumn)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="4">vector_angle_to_rigid (0, 0, 0, RefRow, RefColumn, 0, HomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="5">affine_trans_contour_xld (ModelContours, TransContours, HomMat2D)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="6">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="7">* Matching 01: Display the model contours</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="8">dev_display (Image)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="9">dev_set_color ('green')</l>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="10">dev_set_draw ('margin')</l>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="11">dev_display (ModelRegion)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="12">dev_display (TransContours)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="13">stop ()</l>
<c as_id="matching" as_name="Matching 01" as_grp="[2]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[2]" as_ord="2">* Matching 01: END of generated code for model initialization</c>
<c as_id="matching" as_name="Matching 01" as_grp="[3,1]" as_ord="1">* Matching 01:  * * * * * * * * * * * * * * * * * * * * * * *</c>
<c as_id="matching" as_name="Matching 01" as_grp="[3,1]" as_ord="2">* Matching 01: BEGIN of generated code for model application</c>
<c as_id="matching" as_name="Matching 01" as_grp="[4]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[4]" as_ord="2">* Matching 01: Loop over all specified test images</c>
<l as_id="matching" as_name="Matching 01" as_grp="[4]" as_ord="3">TestImages := ['F:/temp/wall2.jpg']</l>
<l as_id="matching" as_name="Matching 01" as_grp="[4]" as_ord="4">for T := 0 to 0 by 1</l>
<c as_id="matching" as_name="Matching 01" as_grp="[5]" as_ord="1">    * </c>
<c as_id="matching" as_name="Matching 01" as_grp="[5]" as_ord="2">    * Matching 01: Obtain the test image</c>
<l as_id="matching" as_name="Matching 01" as_grp="[5]" as_ord="3">    read_image (Image, TestImages[T])</l>
<c as_id="matching" as_name="Matching 01" as_grp="[6]" as_ord="1">    * </c>
<c as_id="matching" as_name="Matching 01" as_grp="[6]" as_ord="2">    * Matching 01: Find the model</c>
<l as_id="matching" as_name="Matching 01" as_grp="[6]" as_ord="3">    find_scaled_shape_model (Image, ModelID, rad(0), rad(360), 0.95, 1.05, 0.5, 0, 0.5, 'least_squares', [5,1], 0.75, Row, Column, Angle, Scale, Score)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[7,1]" as_ord="1">    * </c>
<c as_id="matching" as_name="Matching 01" as_grp="[7,1]" as_ord="2">    * Matching 01: Transform the model contours into the detected positions</c>
<l as_id="matching" as_name="Matching 01" as_grp="[7,1]" as_ord="3">    dev_display (Image)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,2]" as_ord="1">    for I := 0 to |Score| - 1 by 1</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,3]" as_ord="1">        hom_mat2d_identity (HomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,4]" as_ord="1">        hom_mat2d_scale (HomMat2D, Scale[I], Scale[I], 0, 0, HomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,5]" as_ord="1">        hom_mat2d_rotate (HomMat2D, Angle[I], 0, 0, HomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,5]" as_ord="2">        hom_mat2d_translate (HomMat2D, Row[I], Column[I], HomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,5]" as_ord="3">        affine_trans_contour_xld (ModelContours, TransContours, HomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,6]" as_ord="1">        dev_set_color ('green')</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,6]" as_ord="2">        dev_display (TransContours)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,6]" as_ord="3">        stop ()</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,7]" as_ord="1">    endfor</l>
<l as_id="matching" as_name="Matching 01" as_grp="[10]" as_ord="1">endfor</l>
<c as_id="matching" as_name="Matching 01" as_grp="[11]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[11]" as_ord="2">* Matching 01: Clear model when done</c>
<l as_id="matching" as_name="Matching 01" as_grp="[11]" as_ord="3">stop ()</l>
<l as_id="matching" as_name="Matching 01" as_grp="[11]" as_ord="4">clear_shape_model (ModelID)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[12]" as_ord="1">* Matching 01: *******************************************</c>
<c as_id="matching" as_name="Matching 01" as_grp="[12]" as_ord="2">* Matching 01: END of generated code for model application</c>
<c as_id="matching" as_name="Matching 01" as_grp="[12]" as_ord="3">* Matching 01: *******************************************</c>
<c as_id="matching" as_name="Matching 01" as_grp="[12]" as_ord="4">* </c>
<l>return ()</l>
</body>
<docu id="scaled_shape_match">
<parameters>
<parameter id="Angle"/>
<parameter id="Column"/>
<parameter id="Image"/>
<parameter id="Row"/>
<parameter id="Scale"/>
<parameter id="Score"/>
<parameter id="TemplateImage"/>
</parameters>
</docu>
</procedure>
</hdevelop>
